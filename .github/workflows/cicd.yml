name: CI CD

on:
  push:
    branches:
      - main
      - master

env:
  REPO_NAME: fhir-connector
  REGISTRY_URL: gravitate-registry.cr.de-fra.ionos.com

concurrency: production

jobs:
  #example-job:
  #  #if: ${{ github.event.act }} # Run only locally with 'act'
  #  #if: ${{ !github.event.act }} # Run only in production
  #  runs-on: ubuntu-latest
  #  steps:
  #    -
  #      name: Hello World
  #      #if: ${{ env.ACT }} # Run only locally with 'act'
  #      #if: ${{ !env.ACT }} # Run only in production
  #      run: |
  #        echo "$REPO_NAME" # Access to a variable
  #        echo "${{ env.REPO_NAME }}" # Other way to acess to a variable

  semantic-versioning-dry-run:
    if: ${{ !github.event.act }}
    runs-on: ubuntu-latest
    steps:
    - 
      id: checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - 
      name: Minor version for each merge
      id: taggerDryRun
      uses: anothrNick/github-tag-action@1.36.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        DRY_RUN: true
    - 
      name: Print tags
      run: |
        echo "New tag is: ${{ steps.taggerDryRun.outputs.new_tag }}"
        echo "Current tag is: ${{ steps.taggerDryRun.outputs.tag }}"
        echo "Increment type is: ${{ steps.taggerDryRun.outputs.part }}"
    outputs:
      new-tag: ${{ steps.taggerDryRun.outputs.new_tag }}
      current-tag: ${{ steps.taggerDryRun.outputs.tag }}
      increment-type: ${{ steps.taggerDryRun.outputs.part }}

  docker:
    needs: semantic-versioning-dry-run
    if: always()
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to GH registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build local testing
        uses: docker/build-push-action@v4
        if: ${{ env.ACT }}
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: ${{ env.REGISTRY_URL }}/${{ env.REPO_NAME }}:latest
      -
        name: Build and Push image to registry
        uses: docker/build-push-action@v4
        if: ${{ !env.ACT }}
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.REGISTRY_URL }}/${{ env.REPO_NAME }}:latest , ${{ env.REGISTRY_URL }}/${{ env.REPO_NAME }}:${{ needs.semantic-versioning-dry-run.outputs.new-tag }}
    outputs:
      image-name: ${{ env.REGISTRY_URL }}/${{ env.REPO_NAME }}:${{ needs.semantic-versioning-dry-run.outputs.new-tag }}

  semantic-versioning:
    runs-on: ubuntu-latest
    if: ${{ !github.event.act }}
    needs: docker
    steps:
      - 
        id: checkout
        uses: actions/checkout@v2
      - 
        name: Minor version for each merge
        id: taggerFinal
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true